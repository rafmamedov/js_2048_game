{"version":3,"sources":["scripts/main.js"],"names":["gameField","score","rows","columns","field","document","querySelector","button","startMessage","loseMessage","winMessage","setGame","row","cell","num","updateCell","cells","setNewNumber","hasEmptyCell","found","Math","floor","random","randomizeNumber","fieldCell","innerText","className","classList","add","setGameOver","mergeCells","newRow","filterZero","i","length","remove","push","filter","slideHorizontally","side","reverse","updateField","transpose","map","_","emptyCell","some","isNextSame","isBelowSame","addEventListener","contains","e","previousField","toString","code"],"mappings":"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","file":"main.7c88092f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet gameField;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst field = document.querySelector('tbody');\nconst button = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nbutton.addEventListener('click', () => {\n  score = 0;\n  document.querySelector('.game-score').innerText = score;\n\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerText = 'Restart';\n    startMessage.classList.add('hidden');\n    setGame();\n  } else {\n    loseMessage.classList.add('hidden');\n    setGame();\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  const previousField = [...gameField].toString();\n\n  if (e.code === 'ArrowLeft' || e.code === 'ArrowRight') {\n    slideHorizontally(e.code);\n  }\n\n  if (e.code === 'ArrowUp' || e.code === 'ArrowDown') {\n    transpose();\n    slideHorizontally(e.code);\n    transpose();\n  }\n\n  updateField();\n\n  const currentField = [...gameField].toString();\n\n  if (previousField !== currentField) {\n    setNewNumber();\n  }\n\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction setGame() {\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      const num = gameField[row][cell];\n\n      updateCell(field.rows[row].cells[cell], num);\n    }\n  }\n\n  setNewNumber();\n  setNewNumber();\n}\n\nfunction setNewNumber() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const row = Math.floor(Math.random() * rows);\n    const cell = Math.floor(Math.random() * columns);\n\n    if (gameField[row][cell] === 0) {\n      gameField[row][cell] = randomizeNumber();\n      updateCell(field.rows[row].cells[cell], gameField[row][cell]);\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      if (gameField[row][cell] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction randomizeNumber() {\n  return Math.random() >= 0.9 ? 4 : 2;\n}\n\nfunction updateCell(fieldCell, num) {\n  fieldCell.innerText = '';\n  fieldCell.className = 'field-cell';\n  fieldCell.classList.add(`field-cell--${num}`);\n\n  if (num > 0) {\n    fieldCell.innerText = num;\n  } else {\n    fieldCell.innerText = '';\n  }\n\n  if (!fieldCell.innerText) {\n    fieldCell.className = 'field-cell';\n  }\n\n  setGameOver();\n}\n\nfunction mergeCells(row) {\n  let newRow = row;\n\n  newRow = filterZero(newRow);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n\n      if (newRow[i] === 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n\n  newRow = filterZero(newRow);\n\n  while (newRow.length < columns) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slideHorizontally(side) {\n  for (let row = 0; row < rows; row++) {\n    let newRow = gameField[row];\n\n    if (side === 'ArrowLeft' || side === 'ArrowUp') {\n      newRow = mergeCells(newRow);\n    }\n\n    if (side === 'ArrowRight' || side === 'ArrowDown') {\n      newRow.reverse();\n      newRow = mergeCells(newRow);\n      newRow.reverse();\n    }\n\n    gameField[row] = newRow;\n  }\n}\n\nfunction updateField() {\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns; cell++) {\n      const num = gameField[row][cell];\n\n      updateCell(field.rows[row].cells[cell], num);\n    }\n  }\n}\n\nfunction transpose() {\n  gameField = gameField[0].map((_, i) => gameField.map(newRow => newRow[i]));\n}\n\nfunction setGameOver() {\n  const emptyCell = gameField.some(row => row.some(cell => !cell));\n\n  if (emptyCell) {\n    return;\n  }\n\n  for (let row = 0; row < rows; row++) {\n    for (let cell = 0; cell < columns - 1; cell++) {\n      const isNextSame = gameField[row][cell] === gameField[row][cell + 1];\n      const isBelowSame = gameField[cell][row] === gameField[cell + 1][row];\n\n      if (isNextSame || isBelowSame) {\n        return;\n      }\n    }\n  }\n\n  loseMessage.classList.remove('hidden');\n}\n"]}